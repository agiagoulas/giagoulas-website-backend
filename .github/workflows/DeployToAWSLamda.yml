name: Deploy To AWS Lambda
on:
  push:
    branches: [ main ]
jobs:
  continuous-integration:
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v2
      - name: Set up Python 
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          architecture: x64
      - name: Install Python Venv
        run: pip3 install virtualenv
      - name:  Setup Venv
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      - name: Activate and Install Dependencies into Venv
        run: python -m venv venv && source venv/bin/activate &&
          pip3 install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Create Zipfile archive of Venv Dependencies
        run: |
          cd ./venv/lib/python3.9/site-packages
          zip -r9 ../../../../api.zip .
      - name: Add Src to Zip file
        run: cd ./app && zip -g ../api.zip -r .
      - name: Upload Zip File Artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip
  continuous-deployment:
    runs-on: ubuntu-latest
    needs: [ continuous-integration ]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Install AWS CLI
        uses: unfor19/install-aws-cli-action@v1
        with:
          version: 1
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Download Lambda api.zip
        uses: actions/download-artifact@v2
        with:
          name: api
      - name: Upload to S3
        run: aws s3 cp api.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy new Lambda
        run: aws lambda update-function-code --function-name ${{ secrets.AWS_LAMBDA_FUNCTION_NAME }} --s3-bucket ${{ secrets.AWS_S3_BUCKET_NAME }} --s3-key --region ${{ secrets.AWS_DEFAULT_REGION }} api.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
